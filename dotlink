#!/usr/bin/python3

desc = '''dotlink automates the spreading of dotfiles to new systems and uses 
links to dotfile repos to make the use of version control easier.'''


import json
import subprocess
import sys
import argparse


# globals
args = None


# get arguments and set flags as necessary
def process_args():
    # init parser and add arg opts
    parser = argparse.ArgumentParser(description = desc)
    parser.add_argument("-l", "--link", metavar="FILE", nargs='?', help="link the given file to the correct position")

    args = parser.parse_args()
    return args


# calls the link command to make a soft link from 'link' to 'target'
# is a wrapper for ln
def link_wrapper(link, target):
    #TODO check if file exists already
    #       - if so, fail
    #     check if already linked correctly
    print('\tpretend: {} -> {}'.format(target,link))
    return


# loads the json file into a dictionary
# fails if cannot read or json is malformed 
def load_repos_from_json(filename):
    try:
        with open(filename, 'r') as json_file:
            json_obj = json.load(json_file)
            repos = json_obj['dotdirs']
    except IOError:
        print('json file {} doesn\'t exist'.format(filename))
        sys.exit()
    except json.JSONDecodeError:
        print('json file {} is malformed'.format(filename))
        sys.exit()
    return repos
    

# iterates through all repos stored in json file
def iterate_through_repos(repos):
    # iterate through dotfile repo
    for repo in repos:
        print('repo: ' + repo['location'])
        
        # iterate through each target location
        for target in repo['contents']:
            print('target: ' + target['directory'])
            
            # iterate throgh each file
            for dotfile in target['files']:
                
                link_dir = repo['location'] + dotfile['name']
                target_dir = target['directory'] + dotfile['name']
                link_wrapper(link_dir, target_dir)
        
    return 




def main():
    process_args()
    repos = load_repos_from_json('test_data.json')
    iterate_through_repos(repos) 
    return


# run main if executed as script
if __name__ == '__main__':
    main()
